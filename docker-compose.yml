version: "3.9"

services:
  nginx:
    build:
      context: .
      target: nginx
    volumes:
    - /var/lib/thbattle/nginx:/usr/local/openresty/nginx/conf
    - /var/log/nginx:/var/log/nginx
    - nginx-certs:/var/lib/nginx-certs
    depends_on: [backend]
    expose: [80, 443]
    networks:
      thb:
        ipv4_address: 100.64.0.1
    restart: always

  db:
    build:
      context: .
      target: db
    volumes:
    - /var/lib/thbattle/db:/var/lib/postgresql/data
    environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    networks:
      thb:
        ipv4_address: 100.64.0.2
    restart: always

  backend:
    build:
      context: .
      target: backend
    volumes:
    - /var/lib/thbattle/backend:/settings
    environment:
      PYTHONPATH: /settings
      DJANGO_SETTINGS_MODULE: prod_settings
    depends_on: [db]
    expose: [8000]
    networks:
      thb:
        ipv4_address: 100.64.0.3
    restart: always

  chat:
    build:
      context: .
      target: chat
    environment:
      AYA_LOG: info
      BACKEND_URL: 'http://${BACKEND_AUTH:-user:pass}@backend:8000/graphql'
    depends_on: [backend]
    expose: [7777]
    networks:
      thb:
        ipv4_address: 100.64.0.4
    restart: always

  redis:
    image: redis:7
    command:
    - redis-server
    - --dbfilename
    - redis.rdb
    - --dir
    - /var/lib/redis
    - --save
    - '15'
    - '1'
    volumes:
    - /var/lib/thbattle/redis:/var/lib/redis
    networks:
      thb:
        ipv4_address: 100.64.0.5
    restart: always


  forest:
    build:
      context: .
      target: game
    volumes:
    - /var/lib/thbattle/forest:/data/thb
    environment:
      INSTANCE: forest
      BACKEND_URL: 'http://${BACKEND_AUTH:-user:pass}@backend:8000/graphql'
      INTERCONNECT_URL: ''  # not yet used
    depends_on: [backend]
    expose: [9999]
    networks:
      thb:
        ipv4_address: 100.64.0.11
    restart: always

  lake:
    build:
      context: .
      target: game
    volumes:
    - /var/lib/thbattle/lake:/data/thb
    environment:
      INSTANCE: lake
      BACKEND_URL: 'http://${BACKEND_AUTH:-user:pass}@backend:8000/graphql'
      INTERCONNECT_URL: ''  # not yet used
    depends_on: [backend]
    expose: [9999]
    networks:
      thb:
        ipv4_address: 100.64.0.12
    restart: always

  lvs:
    build:
      context: .
      target: lvs
    environment:
      NODE_IP: 10.206.0.14
    privileged: true
    network_mode: host
    restart: 'no'


networks:
  thb:
    ipam:
      driver: default
      config:
      - subnet: 100.64.0.0/24
        ip_range: 100.64.0.0/24
        gateway: 100.64.0.254


volumes:
  nginx-certs:
